
# This file was generated by the Tkinter Designer by Parth Jadhav
# https://github.com/ParthJadhav/Tkinter-Designer


from pathlib import Path

# from tkinter import *
# Explicit imports to satisfy Flake8
from tkinter import Frame, StringVar, Tk, Canvas, Entry, Text, Button, PhotoImage, messagebox
import controller as db_controller

OUTPUT_PATH = Path(__file__).parent
ASSETS_PATH = OUTPUT_PATH / Path(r"./assets")


def relative_to_assets(path: str) -> Path:
    return ASSETS_PATH / Path(path)



def updateAll():
    UpdateAll()
    
    
class UpdateAll(Frame):
    def __init__(self, parent, controller=None, *args, **kwargs):
        Frame.__init__(self, parent, *args, **kwargs)
        self.parent = parent
        self.selected_r_id = self.parent.selected_rid   
        
        self.data = {
            "id": StringVar(),
            "blk": StringVar(),
            "no_students": StringVar(),
            "no_present": StringVar(),
            "no_absent": StringVar(),
            "no_late": StringVar(),
        }


        self.canvas = Canvas(
            self,
            bg = "#FFFFFF",
            height = 622,
            width = 983,
            bd = 0,
            highlightthickness = 0,
            relief = "ridge"
        )

        self.canvas.place(x = 0, y = 0)
        self.canvas.create_rectangle(
            0.0,
            0.0,
            983.0,
            622.0,
            fill="#FFFFFF",
            outline="")
        
        
        self.id_text =self.canvas.create_text(
            111.0,
            470.0,
            anchor="nw",
            text="01",
            fill="#FFFFFF",
            font=("Montserrat SemiBold", 17 * -1)
        )
        

        self.button_image_1 = PhotoImage(
            file=relative_to_assets("button_1.png"))
        button_1 = Button(
            self,
            image=self.button_image_1,
            borderwidth=0,
            highlightthickness=0,
            command=self.handle_update,
            relief="flat"
        )
        button_1.place(
            x=205.0,
            y=492.0,
            width=123.57183074951172,
            height=38.0
        )

        self.image_image_1 = PhotoImage(
            file=relative_to_assets("image_1.png"))
        image_1 = self.canvas.create_image(
            432.0,
            217.0,
            image=self.image_image_1
        )

        self.image_image_2 = PhotoImage(
            file=relative_to_assets("image_2.png"))
        image_2 = self.canvas.create_image(
            365.2608642578125,
            179.0,
            image=self.image_image_2
        )

        entry_image_1 = PhotoImage(
            file=relative_to_assets("entry_1.png"))
        entry_bg_1 = self.canvas.create_image(
            432.53260803222656,
            202.5,
            image=entry_image_1
        )
        entry_1 = Entry(
            self,
            textvariable=self.data["no_absent"],
            bd=0,
            bg="#FFFFFF",
            fg="#000716",
            highlightthickness=0
        )
        entry_1.place(
            x=315.0,
            y=190.0,
            width=235.06521606445312,
            height=23.0
        )

        self.image_image_3 = PhotoImage(
            file=relative_to_assets("image_3.png"))
        image_3 = self.canvas.create_image(
            153.0,
            375.0,
            image=self.image_image_3
        )

        self.image_image_4 = PhotoImage(
            file=relative_to_assets("image_4.png"))
        image_4 = self.canvas.create_image(
            90.2608642578125,
            337.0,
            image=self.image_image_4
        )

        entry_image_2 = PhotoImage(
            file=relative_to_assets("entry_2.png"))
        entry_bg_2 = self.canvas.create_image(
            153.53260803222656,
            360.5,
            image=entry_image_2
        )
        entry_2 = Entry(
            self,
            textvariable=self.data["no_present"],
            bd=0,
            bg="#FFFFFF",
            fg="#000716",
            highlightthickness=0
        )
        entry_2.place(
            x=36.0,
            y=348.0,
            width=235.06521606445312,
            height=23.0
        )

        self.image_image_5 = PhotoImage(
            file=relative_to_assets("image_5.png"))
        image_5 = self.canvas.create_image(
            153.0,
            217.0,
            image=self.image_image_5
        )

        self.image_image_6 = PhotoImage(
            file=relative_to_assets("image_6.png"))
        image_6 = self.canvas.create_image(
            60.2608642578125,
            179.0,
            image=self.image_image_6
        )

        entry_image_3 = PhotoImage(
            file=relative_to_assets("entry_3.png"))
        entry_bg_3 = self.canvas.create_image(
            153.53260803222656,
            202.5,
            image=entry_image_3
        )
        entry_3 = Entry(
            self,
            textvariable=self.data["blk"],
            bd=0,
            bg="#FFFFFF",
            fg="#000716",
            highlightthickness=0
        )
        entry_3.place(
            x=36.0,
            y=190.0,
            width=235.06521606445312,
            height=23.0
        )

        self.image_image_7 = PhotoImage(
            file=relative_to_assets("image_7.png"))
        image_7 = self.canvas.create_image(
            432.0,
            295.0,
            image=self.image_image_7
        )

        self.image_image_8 = PhotoImage(
            file=relative_to_assets("image_8.png"))
        image_8 = self.canvas.create_image(
            355.2608642578125,
            257.0,
            image=self.image_image_8
        )

        entry_image_4 = PhotoImage(
            file=relative_to_assets("entry_4.png"))
        entry_bg_4 = self.canvas.create_image(
            432.53260803222656,
            280.5,
            image=entry_image_4
        )
        entry_4 = Entry(
            self,
            textvariable=self.data["no_late"],
            bd=0,
            bg="#FFFFFF",
            fg="#000716",
            highlightthickness=0
        )
        entry_4.place(
            x=315.0,
            y=268.0,
            width=235.06521606445312,
            height=23.0
        )

        self.image_image_9 = PhotoImage(
            file=relative_to_assets("image_9.png"))
        image_9 = self.canvas.create_image(
            492.0,
            50.0,
            image=self.image_image_9
        )

        self.image_image_10 = PhotoImage(
            file=relative_to_assets("image_10.png"))
        image_10 = self.canvas.create_image(
            491.362060546875,
            50.0,
            image=self.image_image_10
        )

        self.button_image_2 = PhotoImage(
            file=relative_to_assets("button_2.png"))
        button_2 = Button(
            self,
            image=self.button_image_2,
            borderwidth=0,
            highlightthickness=0,
            command=lambda: self.parent.navigate("up"),
            relief="flat"
        )
        button_2.place(
            x=47.0,
            y=31.0,
            width=96.62760162353516,
            height=38.0
        )

        self.image_image_11 = PhotoImage(
            file=relative_to_assets("image_11.png"))
        image_11 = self.canvas.create_image(
            491.0,
            50.0,
            image=self.image_image_11
        )

        self.image_image_12 = PhotoImage(
            file=relative_to_assets("image_12.png"))
        image_12 = self.canvas.create_image(
            153.0302734375,
            295.0,
            image=self.image_image_12
        )

        self.image_image_13 = PhotoImage(
            file=relative_to_assets("image_13.png"))
        image_13 = self.canvas.create_image(
            92.2608642578125,
            257.0,
            image=self.image_image_13
        )

        entry_image_5 = PhotoImage(
            file=relative_to_assets("entry_5.png"))
        entry_bg_5 = self.canvas.create_image(
            153.56288146972656,
            280.5,
            image=entry_image_5
        )
        entry_5 = Entry(
            self,
            textvariable=self.data["no_students"],
            bd=0,
            bg="#FFFFFF",
            fg="#000716",
            highlightthickness=0
        )
        entry_5.place(
            x=36.0302734375,
            y=268.0,
            width=235.06521606445312,
            height=23.0
        )

        self.image_image_14 = PhotoImage(
            file=relative_to_assets("image_14.png"))
        image_14 = self.canvas.create_image(
            766.0,
            321.0,
            image=self.image_image_14
        )
    
    
    def initialize2(self):
            self.block_data = db_controller.get_section()
            self.selected_r_id = self.parent.selected_rid
    
            if self.block_data is not None:
                self.selected_block_data = list(
                    filter(lambda x: str(x[0]) == self.selected_r_id, self.block_data)
                )

                if self.selected_block_data:
                    self.selected_block_data = self.selected_block_data[0]

                    self.canvas.itemconfigure(self.id_text, text=self.selected_block_data[0])
                    self.data["blk"].set(self.selected_block_data[1])
                    self.data["no_students"].set(self.selected_block_data[2])
                    self.data["no_present"].set(self.selected_block_data[3])
                    self.data["no_absent"].set(self.selected_block_data[4])
                    self.data["no_late"].set(self.selected_block_data[5])
                    
    def handle_update(self):
        result = db_controller.update_section_all(
            self.selected_r_id,
            blk=self.data["blk"].get(),
            no_students=self.data["no_students"].get(),
            no_present=self.data["no_present"].get(),
            no_absent=self.data["no_absent"].get(),
            no_late=self.data["no_late"].get(),       
        )
    
        if result:
            messagebox.showinfo("Success", "Details updated successfully")
            self.parent.navigate("up")
       
            self.parent.windows.get("up").handle_refresh()
            for label in self.data.keys():
                self.data[label].set("")
        else:
            messagebox.showerror("Error", "Failed to update details")